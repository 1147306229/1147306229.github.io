<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>山海的第一篇博客文章</title>
    <url>/2020/08/23/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p>请多多指教！！！</p>
]]></content>
  </entry>
  <entry>
    <title>01-JAVA面试题</title>
    <url>/2020/08/25/01-JAVA%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    <content><![CDATA[<h3 id="1-请你谈谈Java中是如何支持正则表达式操作的？"><a href="#1-请你谈谈Java中是如何支持正则表达式操作的？" class="headerlink" title="1.请你谈谈Java中是如何支持正则表达式操作的？"></a>1.请你谈谈Java中是如何支持正则表达式操作的？</h3><p>Java中的String类提供了支持正则表达式操作的方法，包括：<code>matches()</code>、<code>replaceAll()</code>、<code>replaceFirst()</code>、<code>split()</code>。</p>
<a id="more"></a>
<p>此外，Java中可以用Pattern类表示正则表达式对象，它提供了丰富的API进行各种正则表达式操作，如：<br></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.regex.Matcher;</span><br><span class="line">import java.util.regex.Pattern;</span><br><span class="line">class RegExpTest &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String str &#x3D; &quot;成都市(成华区)(武侯区)(高新区)&quot;;</span><br><span class="line">        Pattern p &#x3D; Pattern.compile(&quot;.*?(?&#x3D;\\()&quot;);</span><br><span class="line">        Matcher m &#x3D; p.matcher(str);</span><br><span class="line">        if(m.find()) &#123;</span><br><span class="line">            System.out.println(m.group());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>

<h3 id="2-请你讲讲-amp-和-amp-amp-的区别？"><a href="#2-请你讲讲-amp-和-amp-amp-的区别？" class="headerlink" title="2.请你讲讲&amp;和&amp;&amp;的区别？"></a>2.请你讲讲&amp;和&amp;&amp;的区别？</h3><p>&amp;运算符有两种用法：(1)按位与；(2)逻辑与。&amp;&amp;运算符是短路与运算。逻辑与跟短路与的差别是非常巨大的，虽然二者都要求运算符左右两端的布尔值都是true整个表达式的值才是true。&amp;&amp;之所以称为短路运算是因为，如果&amp;&amp;左边的表达式的值是false，右边的表达式会被直接短路掉，不会进行运算。很多时候我们可能都需要用&amp;&amp;而不是&amp;，例如在验证用户登录时判定用户名不是null而且不是空字符串，应当写为：username != null &amp;&amp;!username.equals(“”)，二者的顺序不能交换，更不能用&amp;运算符，因为第一个条件如果不成立，根本不能进行字符串的equals比较，否则会产生NullPointerException异常。<br><br></p>
<h3 id="3-int和Integer有什么区别？"><a href="#3-int和Integer有什么区别？" class="headerlink" title="3.int和Integer有什么区别？"></a>3.int和Integer有什么区别？</h3><p>Java是一个近乎纯洁的面向对象编程语言，但是为了编程的方便还是引入了基本数据类型，但是为了能够将这些基本数据类型当成对象操作，Java为每一个基本数据类型都引入了对应的包装类型（wrapper class），int的包装类就是Integer，从Java 5开始引入了自动装箱/拆箱机制，使得二者可以相互转换。<br>Java 为每个原始类型提供了包装类型：</p>
<ul>
<li>原始类型: boolean，char，byte，short，int，long，float，double</li>
<li>包装类型：Boolean，Character，Byte，Short，Integer，Long，Float，Double</li>
</ul>
<p>如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class AutoUnboxingTest &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Integer a &#x3D; new Integer(3);</span><br><span class="line">        Integer b &#x3D; 3;                  &#x2F;&#x2F; 将3自动装箱成Integer类型</span><br><span class="line">        int c &#x3D; 3;</span><br><span class="line">        System.out.println(a &#x3D;&#x3D; b);     &#x2F;&#x2F; false 两个引用没有引用同一对象</span><br><span class="line">        System.out.println(a &#x3D;&#x3D; c);     &#x2F;&#x2F; true a自动拆箱成int类型再和c比较</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>

<h3 id="4-请你说明一下int-和-Integer-有什么区别"><a href="#4-请你说明一下int-和-Integer-有什么区别" class="headerlink" title="4.请你说明一下int 和 Integer 有什么区别"></a>4.请你说明一下int 和 Integer 有什么区别</h3><p>Java 提供两种不同的类型：引用类型和原始类型（或内置类型）。Int是java的原始数据类型，Integer是java为int提供的封装类。<br>Java为每个原始类型提供了封装类。<br>原始类型封装类<br>booleanBoolean<br>charCharacter<br>byteByte<br>shortShort<br>intInteger<br>longLong<br>floatFloat<br>doubleDouble<br>引用类型和原始类型的行为完全不同，并且它们具有不同的语义。引用类型和原始类型具有不同的特征和用法，它们包括：大小和速<br>度问题，这种类型以哪种类型的数据结构存储，当引用类型和原始类型用作某个类的实例数据时所指定的缺省值。对象引用实例变量<br>的缺省值为null，而原始类型实例变量的缺省值与它们的类型有关。<br><br></p>
<h3 id="5-请说明String是最基本的数据类型吗"><a href="#5-请说明String是最基本的数据类型吗" class="headerlink" title="5.请说明String是最基本的数据类型吗?"></a>5.请说明String是最基本的数据类型吗?</h3><p>基本数据类型包括byte、int、char、long、float、double、boolean和short。<br>java.lang.String类是final类型的，因此不可以继承这个类、不能修改这个类。为了提高效率节省空间，我们应该用StringBuffer类。</p>
]]></content>
  </entry>
</search>
